---
- name: Create a temporary file
  tempfile:
    suffix: .xml
  register: pacemaker_config
  check_mode: false
  changed_when: false

- name: Dump cluster configuration
  shell: cibadmin --query > {{ pacemaker_config.path | quote }}
  check_mode: false
  changed_when: false
  ignore_errors: "{{ ansible_check_mode }}"
  register: dump_result

- name: Install a sample cluster configuration
  copy:
    dest: "{{ pacemaker_config.path }}"
    content: <cib />
  when: ansible_check_mode and dump_result.rc != 0
  check_mode: false
  changed_when: false

- name: Register configuration checksum
  stat:
    path: "{{ pacemaker_config.path }}"
    get_attributes: false
    get_checksum: true
    get_mime: false
  register: before

- name: Configure cluster properties
  include_tasks: nvpair.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
    nvpair_parent: /cib/configuration/crm_config/cluster_property_set[@id="cib-bootstrap-options"]
    parent_id: cib-bootstrap-options
  with_dict: "{{ pacemaker_cluster_options | default({}) }}"
  loop_control:
    loop_var: nvpair
    label: "{{ '{' ~ nvpair.key ~ ': ' ~ nvpair.value ~ '}' }}"

- name: Configure resource defaults
  include_tasks: nvpair.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
    nvpair_parent: /cib/configuration/rsc_defaults/meta_attributes[@id="rsc_defaults-options"]
    parent_id: rsc_defaults-options
  with_dict: "{{ pacemaker_resource_defaults | default({}) }}"
  loop_control:
    loop_var: nvpair
    label: "{{ '{' ~ nvpair.key ~ ': ' ~ nvpair.value ~ '}' }}"

- name: Configure simple resources
  include_tasks: primitive.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
    primitive_parent: /cib/configuration/resources
  with_dict: "{{ pacemaker_simple_resources | default({}) }}"
  loop_control:
    loop_var: primitive

- name: Configure advanced resources
  include_tasks: adv-resource.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
  with_dict: "{{ pacemaker_advanced_resources | default({}) }}"
  loop_control:
    loop_var: resource

- name: Configure resource constraints
  include_tasks: constraint.yml
  vars:
    xml_path: "{{ pacemaker_config.path }}"
  with_items:
    - "{{ pacemaker_constraints | default([]) }}"
  loop_control:
    loop_var: constraint

- name: Recalculate configuration checksum
  stat:
    path: "{{ pacemaker_config.path }}"
    get_attributes: false
    get_checksum: true
    get_mime: false
  register: after

- name: Read admin epoch
  xml:
    path: "{{ pacemaker_config.path }}"
    xpath: /cib
    attribute: admin_epoch
    content: attribute
  register: xml_result
  when: before.stat.checksum != after.stat.checksum
  changed_when: false
  check_mode: false

- name: Increment admin epoch
  xml:
    pretty_print: "{{ pacemaker_pretty_xml }}"
    path: "{{ pacemaker_config.path }}"
    xpath: /cib
    attribute: admin_epoch
    value: "{{ (xml_result.matches[0].cib.admin_epoch | default(0) | int) + 1 }}"
  when: before.stat.checksum != after.stat.checksum
  check_mode: false

- name: Verify cluster configuration
  command: crm_verify --verbose --xml-file={{ pacemaker_config.path | quote }}
  when: before.stat.checksum != after.stat.checksum
  changed_when: false
  check_mode: false

- name: Push cluster configuration
  command: cibadmin --replace --xml-file {{ pacemaker_config.path | quote }}
  when: before.stat.checksum != after.stat.checksum

- name: Clean up
  file:
    path: "{{ pacemaker_config.path }}"
    state: absent
  check_mode: false
  changed_when: false
